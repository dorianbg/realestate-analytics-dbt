{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.7", "generated_at": "2024-02-25T08:14:45.873740Z", "invocation_id": "16797493-6fe6-4585-bf6e-459201ae58f2", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.080278Z", "completed_at": "2024-02-25T08:14:44.096620Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.098754Z", "completed_at": "2024-02-25T08:14:44.098771Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023047924041748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.1vw_last_ad_time_rentals_flats", "compiled": true, "compiled_code": "\n\n\n\nselect\n    ad_id,\n    min(seen_date) as first_seen,\n    max(seen_date) as last_seen,\n    case\n        when max(seen_date) < now()::date - INTERVAL '4 DAY'\n            then 'inactive'\n        else 'active'\n    end as status,\n    max(seen_date) - min(seen_date) as days_on_the_market\nfrom \"property_cro\".\"staging\".\"rentals_flats\"\ngroup by ad_id\n\n", "relation_name": "\"property_cro\".\"analytics_rentals_flats\".\"vw_last_ad_time\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.088164Z", "completed_at": "2024-02-25T08:14:44.097060Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.099047Z", "completed_at": "2024-02-25T08:14:44.099050Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022327899932861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.1vw_last_ad_time_sales_flats", "compiled": true, "compiled_code": "\n\n\n\nselect\n    ad_id,\n    min(seen_date) as first_seen,\n    max(seen_date) as last_seen,\n    case\n        when max(seen_date) < now()::date - INTERVAL '4 DAY'\n            then 'inactive'\n        else 'active'\n    end as status,\n    max(seen_date) - min(seen_date) as days_on_the_market\nfrom \"property_cro\".\"staging\".\"sales_flats\"\ngroup by ad_id\n\n", "relation_name": "\"property_cro\".\"analytics_sales_flats\".\"vw_last_ad_time\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.090473Z", "completed_at": "2024-02-25T08:14:44.097410Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.099564Z", "completed_at": "2024-02-25T08:14:44.099567Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02229595184326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.1vw_last_ad_time_sales_houses", "compiled": true, "compiled_code": "\n\n\n\nselect\n    ad_id,\n    min(seen_date) as first_seen,\n    max(seen_date) as last_seen,\n    case\n        when max(seen_date) < now()::date - INTERVAL '4 DAY'\n            then 'inactive'\n        else 'active'\n    end as status,\n    max(seen_date) - min(seen_date) as days_on_the_market\nfrom \"property_cro\".\"staging\".\"sales_houses\"\ngroup by ad_id\n\n", "relation_name": "\"property_cro\".\"analytics_sales_houses\".\"vw_last_ad_time\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.093109Z", "completed_at": "2024-02-25T08:14:44.098223Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.100968Z", "completed_at": "2024-02-25T08:14:44.100972Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023010969161987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.ad_price_history", "compiled": true, "compiled_code": "\n\nwith cte as (\n    select\n        seen_date, ad_id, price, type,\n        row_number() over (partition by ad_id order by seen_date) as row_number\n    from (\n        select seen_date, ad_id, price, 'sales_flats' as type from \"property_cro\".\"staging\".\"sales_flats\" union all\n        select seen_date, ad_id, price, 'sales_houses' as type from \"property_cro\".\"staging\".\"sales_houses\" union all\n        select seen_date, ad_id, price, 'rentals_flats' as type from \"property_cro\".\"staging\".\"rentals_flats\"\n    ) a\n), cte2 as (\n    select b1.seen_date as sd_old, b1.ad_id as ad_id_old, b1.price as price_old, b1.row_number as rn_old,\n           b2.seen_date as sd_new, b2.ad_id as ad_id_new, b2.price as price_new, b2.row_number as rn_new, b1.type\n    from cte as b1\n    left join cte as b2\n        on b1.ad_id = b2.ad_id and b1.row_number = b2.row_number - 1\n)\nselect\n    ad_id_old as ad_id, type,\n    case when rn_old = 1 then 'first_seen'\n        when sd_new is null then 'last_seen'\n        when price_new <= 0.99 * price_old or price_new >= 1.01 * price_old then 'px_chg'\n    end as price_change_reason,\n    case when rn_old = 1 then sd_old\n        when sd_new is null then sd_old\n        when price_new <= 0.99 * price_old or price_new >= 1.01 * price_old then sd_new\n    end as change_date,\n    case when rn_old = 1 then 'first'\n        when sd_new is null then ('\u20ac' || round(price_old::numeric,0)::varchar)\n        when price_new <= 0.99 * price_old or price_new >= 1.01 * price_old then ('\u20ac' || round(price_old::numeric, 0)::varchar)\n    end as price_old,\n    case when rn_old = 1 then ('\u20ac' || round(price_old::numeric,0)::varchar)\n        when sd_new is null then 'current'\n        when price_new <= 0.99 * price_old or price_new >= 1.01 * price_old then ('\u20ac' || round(price_new::numeric, 0)::varchar)\n    end as price_new\nfrom cte2\nwhere rn_old = 1 -- first price\n    or sd_new is null -- last price -- decided to remove this for the time being\n    or price_new <= 0.99 * price_old or price_new >= 1.01 * price_old", "relation_name": "\"property_cro\".\"analytics_common\".\"ad_price_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.105795Z", "completed_at": "2024-02-25T08:14:44.117162Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.119453Z", "completed_at": "2024-02-25T08:14:44.119460Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017477750778198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_date_to_quarter_mapping", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith quarterly as (\n    SELECT current_date - 91 * sequence.day AS quarter\n    FROM generate_series(0, 50) AS sequence(day)\n), daily as (\n    select current_date - sequence.day AS date_\n    from generate_series(0,4550) AS sequence(day)\n), joined as (\n    select\n        date_, quarter,\n        ROW_NUMBER() OVER (PARTITION BY date_ ORDER BY abs(date_ - quarter)) as rn\n    from quarterly q\n             join daily d\n                  on q.quarter > d.date_\n)\nselect date_, quarter\nfrom joined\nwhere rn = 1\n\n\n\n-- maps date to relevant quarter, eg.\n-- date_, quarter\n-- 2021-04-09,2021-05-15\n-- 2021-04-22,2021-05-15\n-- 2021-04-30,2021-05-15\n-- 2021-05-12,2021-05-15\n-- 2021-06-08,2021-08-14\n-- 2021-06-10,2021-08-14\n-- 2021-06-19,2021-08-14\n-- 2021-07-21,2021-08-14\n-- 2021-07-30,2021-08-14", "relation_name": "\"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.108987Z", "completed_at": "2024-02-25T08:14:44.117466Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.119984Z", "completed_at": "2024-02-25T08:14:44.119987Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017868995666503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.zagreb_locations", "compiled": true, "compiled_code": "\n\nselect 'Donji Grad, Donji grad' as location union all\nselect 'Dubrava, Dubrava' as location union all\nselect 'Gornja Dubrava, Gornja Dubrava' as location union all\nselect 'Gornja Dubrava, Poljanice' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Britanac' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Centar' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Dolac' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Gornji grad' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Gup\u010deva zvijezda' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Kaptol' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Kraljevec' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Ksaver' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Medve\u0161\u010dak' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Mirogoj' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Pantov\u010dak' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Prekri\u017eje' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Ribnjak' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Tu\u0161kanac' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Vo\u0107arsko naselje' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, Zelengaj' as location union all\nselect 'Gornji Grad - Medve\u0161\u010dak, \u0160alata' as location union all\nselect 'Maksimir, Maksimir' as location union all\nselect 'Maksimir, Ravnice' as location union all\nselect 'Maksimir, Svetice' as location union all\nselect 'Novi Zagreb - Istok, Bundek' as location union all\nselect 'Novi Zagreb - Istok, Dugave' as location union all\nselect 'Novi Zagreb - Istok, Sopot' as location union all\nselect 'Novi Zagreb - Istok, Sredi\u0161\u0107e' as location union all\nselect 'Novi Zagreb - Istok, Travno' as location union all\nselect 'Novi Zagreb - Istok, Utrina' as location union all\nselect 'Novi Zagreb - Istok, Zapru\u0111e' as location union all\nselect 'Novi Zagreb - Zapad, Kajzerica' as location union all\nselect 'Novi Zagreb - Zapad, Lani\u0161te' as location union all\nselect 'Novi Zagreb - Zapad, Siget' as location union all\nselect 'Novi Zagreb - Zapad, Trnsko' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, Borovje' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, Donje Svetice' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, Dubec' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, Feren\u0161\u010dica' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, Folnegovi\u0107evo naselje' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, Savica - \u0160anci' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, Volov\u010dica' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, Vukomerec' as location union all\nselect 'Pe\u0161\u010denica - \u017ditnjak, \u017ditnjak' as location union all\nselect 'Podsljeme, Dolje' as location union all\nselect 'Podsljeme, Gra\u010dani' as location union all\nselect 'Podsljeme, Mlinovi' as location union all\nselect 'Podsljeme, \u0160estine' as location union all\nselect 'Stenjevec, Male\u0161nica' as location union all\nselect 'Stenjevec, Stenjevec' as location union all\nselect 'Stenjevec, \u0160pansko' as location union all\nselect 'Tre\u0161njevka - Jug, Gajevo' as location union all\nselect 'Tre\u0161njevka - Jug, Gredice' as location union all\nselect 'Tre\u0161njevka - Jug, Horvati' as location union all\nselect 'Tre\u0161njevka - Jug, Jarun' as location union all\nselect 'Tre\u0161njevka - Jug, Kne\u017eija' as location union all\nselect 'Tre\u0161njevka - Jug, Pre\u010dko' as location union all\nselect 'Tre\u0161njevka - Jug, Srednjaci' as location union all\nselect 'Tre\u0161njevka - Jug, Stagli\u0161\u0107e' as location union all\nselect 'Tre\u0161njevka - Jug, Vrbani' as location union all\nselect 'Tre\u0161njevka - Sjever, Tre\u0161njevka' as location union all\nselect 'Trnje, Cvjetno naselje' as location union all\nselect 'Trnje, Kanal' as location union all\nselect 'Trnje, Kruge' as location union all\nselect 'Trnje, Martinovka' as location union all\nselect 'Trnje, Savica' as location union all\nselect 'Trnje, Sige\u010dica' as location union all\nselect 'Trnje, Trnje' as location union all\nselect 'Trnje, Vrbik' as location union all\nselect '\u010crnomerec, Bijenik' as location union all\nselect '\u010crnomerec, Sveti Duh' as location union all\nselect '\u010crnomerec, \u010crnomerec' as location", "relation_name": "\"property_cro\".\"analytics_common\".\"zagreb_locations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.111311Z", "completed_at": "2024-02-25T08:14:44.117938Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.120249Z", "completed_at": "2024-02-25T08:14:44.120252Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017709970474243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.2mv_price_history_rentals_flats", "compiled": true, "compiled_code": "\n\n\n\nwith t as (\n    select\n\t\tlas.ad_id,\n        t.last_seen,\n        t.first_seen,\n        price,\n        seen_date,\n        t.days_on_the_market,\n        t.status,\n        first_value(price) over (partition by las.ad_id order by seen_date desc range between UNBOUNDED preceding and unbounded following) as current_price,\n\t\tlast_value(price) over (partition by las.ad_id order by seen_date desc range between UNBOUNDED preceding and unbounded following) as first_price\n\tfrom \"property_cro\".\"staging\".\"rentals_flats\" las\n    join \"property_cro\".\"analytics_rentals_flats\".\"vw_last_ad_time\" as t\n        on las.ad_id = t.ad_id\n    where las.price between 200 and 10000\n),\nad_price_history as (\n    select\n        ad_id,\n        last_seen,\n        first_seen,\n        current_price,\n        first_price,\n        days_on_the_market,\n        status,\n        min(price) filter ( where seen_date <= t.last_seen - interval '60 day') as price_60,\n        min(price) filter ( where seen_date between t.last_seen - interval '60 day' and t.last_seen - interval '45 day') as price_45,\n        min(price) filter ( where seen_date between t.last_seen - interval '45 day' and t.last_seen - interval '30 day') as price_30,\n        min(price) filter ( where seen_date between t.last_seen - interval '30 day' and t.last_seen - interval '15 day') as price_15,\n        min(price) filter ( where seen_date between t.last_seen - interval '15 day' and t.last_seen - interval '7 day') as price_7,\n        min(price) filter ( where seen_date between t.last_seen - interval '7 day' and t.last_seen - interval '3 day') as price_3,\n        count(ad_id) as num_seen,\n        max(seen_date) as latest_seen_date\n    from t\n    group by ad_id, last_seen, first_seen, current_price, first_price, days_on_the_market, status\n), last_ad as (\n    select\n        ad.ad_id,\n        ad.seen_date,\n        ad.location,\n        ad.title,\n        ad.link,\n        ad.flat_type,\n        ad.floor,\n        ad.size,\n        ad.price\n    from (select row_number() over (partition by ad_id order by seen_time desc) as rown,\n                 *\n          from \"property_cro\".\"staging\".\"rentals_flats\") ad\n    where rown = 1\n)\nselect\n    ad.location,\n    ad.title,\n    ad.link,\n    ad.flat_type,\n    ad.floor,\n    ad.size,\n    ad.price,\n    aph.ad_id,\n    aph.last_seen,\n    aph.first_seen,\n    aph.current_price,\n    aph.first_price,\n    aph.price_60,\n    aph.price_45,\n    aph.price_30,\n    aph.price_15,\n    aph.price_7,\n    aph.price_3,\n    aph.num_seen,\n    aph.latest_seen_date,\n    aph.days_on_the_market,\n    aph.status\nfrom ad_price_history aph\njoin last_ad ad\n\ton aph.ad_id = ad.ad_id\n\tand aph.last_seen = ad.seen_date\nwhere (ad.price/ad.size) between 2.5 and 50\n", "relation_name": "\"property_cro\".\"analytics_rentals_flats\".\"mv_price_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.115048Z", "completed_at": "2024-02-25T08:14:44.118596Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.121091Z", "completed_at": "2024-02-25T08:14:44.121093Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017660856246948242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.2mv_price_history_sales_flats", "compiled": true, "compiled_code": "\n\n\n\nwith t as (\n    select\n\t\tlas.ad_id,\n        t.last_seen,\n        t.first_seen,\n        price,\n        seen_date,\n        t.days_on_the_market,\n        t.status,\n        first_value(price) over (partition by las.ad_id order by seen_date desc range between UNBOUNDED preceding and unbounded following) as current_price,\n\t\tlast_value(price) over (partition by las.ad_id order by seen_date desc range between UNBOUNDED preceding and unbounded following) as first_price\n\tfrom \"property_cro\".\"staging\".\"sales_flats\" las\n    join \"property_cro\".\"analytics_sales_flats\".\"vw_last_ad_time\" as t\n        on las.ad_id = t.ad_id\n    where las.price between 12000 and 1000000\n),\nad_price_history as (\n    select\n        ad_id,\n        last_seen,\n        first_seen,\n        current_price,\n        first_price,\n        days_on_the_market,\n        status,\n        min(price) filter ( where seen_date <= t.last_seen - interval '60 day') as price_60,\n        min(price) filter ( where seen_date between t.last_seen - interval '60 day' and t.last_seen - interval '45 day') as price_45,\n        min(price) filter ( where seen_date between t.last_seen - interval '45 day' and t.last_seen - interval '30 day') as price_30,\n        min(price) filter ( where seen_date between t.last_seen - interval '30 day' and t.last_seen - interval '15 day') as price_15,\n        min(price) filter ( where seen_date between t.last_seen - interval '15 day' and t.last_seen - interval '7 day') as price_7,\n        min(price) filter ( where seen_date between t.last_seen - interval '7 day' and t.last_seen - interval '3 day') as price_3,\n        count(ad_id) as num_seen,\n        max(seen_date) as latest_seen_date\n    from t\n    group by ad_id, last_seen, first_seen, current_price, first_price, days_on_the_market, status\n), last_ad as (\n    select\n        ad.ad_id,\n        ad.seen_date,\n        ad.location,\n        ad.title,\n        ad.link,\n        ad.flat_type,\n        ad.floor,\n        ad.size,\n        ad.price\n    from (select row_number() over (partition by ad_id order by seen_time desc) as rown,\n                 *\n          from \"property_cro\".\"staging\".\"sales_flats\") ad\n    where rown = 1\n)\nselect\n    ad.location,\n    ad.title,\n    ad.link,\n    ad.flat_type,\n    ad.floor,\n    ad.size,\n    ad.price,\n    aph.ad_id,\n    aph.last_seen,\n    aph.first_seen,\n    aph.current_price,\n    aph.first_price,\n    aph.price_60,\n    aph.price_45,\n    aph.price_30,\n    aph.price_15,\n    aph.price_7,\n    aph.price_3,\n    aph.num_seen,\n    aph.latest_seen_date,\n    aph.days_on_the_market,\n    aph.status\nfrom ad_price_history aph\njoin last_ad ad\n\ton aph.ad_id = ad.ad_id\n\tand aph.last_seen = ad.seen_date\nwhere (ad.price/ad.size) between 300 and 10000\n", "relation_name": "\"property_cro\".\"analytics_sales_flats\".\"mv_price_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.126766Z", "completed_at": "2024-02-25T08:14:44.139483Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.141464Z", "completed_at": "2024-02-25T08:14:44.141472Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018819093704223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.2mv_price_history_sales_houses", "compiled": true, "compiled_code": "\n\n\n\nwith t as (\n    select\n\t\tlas.ad_id,\n        t.last_seen,\n        t.first_seen,\n        price,\n        seen_date,\n        t.days_on_the_market,\n        t.status,\n        first_value(price) over (partition by las.ad_id order by seen_date desc range between UNBOUNDED preceding and unbounded following) as current_price,\n\t\tlast_value(price) over (partition by las.ad_id order by seen_date desc range between UNBOUNDED preceding and unbounded following) as first_price\n\tfrom \"property_cro\".\"staging\".\"sales_houses\" las\n    join \"property_cro\".\"analytics_sales_houses\".\"vw_last_ad_time\" as t\n        on las.ad_id = t.ad_id\n    where las.price between 10000 and 1000000\n),\nad_price_history as (\n    select\n        ad_id,\n        last_seen,\n        first_seen,\n        current_price,\n        first_price,\n        days_on_the_market,\n        status,\n        min(price) filter ( where seen_date <= t.last_seen - interval '60 day') as price_60,\n        min(price) filter ( where seen_date between t.last_seen - interval '60 day' and t.last_seen - interval '45 day') as price_45,\n        min(price) filter ( where seen_date between t.last_seen - interval '45 day' and t.last_seen - interval '30 day') as price_30,\n        min(price) filter ( where seen_date between t.last_seen - interval '30 day' and t.last_seen - interval '15 day') as price_15,\n        min(price) filter ( where seen_date between t.last_seen - interval '15 day' and t.last_seen - interval '7 day') as price_7,\n        min(price) filter ( where seen_date between t.last_seen - interval '7 day' and t.last_seen - interval '3 day') as price_3,\n        count(ad_id) as num_seen,\n        max(seen_date) as latest_seen_date\n    from t\n    group by ad_id, last_seen, first_seen, current_price, first_price, days_on_the_market, status\n), last_ad as (\n    select\n        ad.ad_id,\n        ad.seen_date,\n        ad.location,\n        ad.title,\n        ad.link,\n        ad.flat_type,\n        ad.floor,\n        ad.size,\n        ad.price\n    from (select row_number() over (partition by ad_id order by seen_time desc) as rown,\n                 *\n          from \"property_cro\".\"staging\".\"sales_houses\") ad\n    where rown = 1\n)\nselect\n    ad.location,\n    ad.title,\n    ad.link,\n    ad.flat_type,\n    ad.floor,\n    ad.size,\n    ad.price,\n    aph.ad_id,\n    aph.last_seen,\n    aph.first_seen,\n    aph.current_price,\n    aph.first_price,\n    aph.price_60,\n    aph.price_45,\n    aph.price_30,\n    aph.price_15,\n    aph.price_7,\n    aph.price_3,\n    aph.num_seen,\n    aph.latest_seen_date,\n    aph.days_on_the_market,\n    aph.status\nfrom ad_price_history aph\njoin last_ad ad\n\ton aph.ad_id = ad.ad_id\n\tand aph.last_seen = ad.seen_date\nwhere (ad.price/ad.size) between 50 and 10000\n", "relation_name": "\"property_cro\".\"analytics_sales_houses\".\"mv_price_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.129493Z", "completed_at": "2024-02-25T08:14:44.140086Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.142002Z", "completed_at": "2024-02-25T08:14:44.142005Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01888298988342285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_rentals_flats", "compiled": true, "compiled_code": "\n\n\n\nselect distinct\n\tlocation,\n\tcount(ad_id) over (partition by location) as area_total_ads,\n\tavg(price/size) over (partition by location) as area_average\nfrom \"property_cro\".\"analytics_rentals_flats\".\"mv_price_history\"\nwhere last_seen > now()::date - INTERVAL '360 DAY'\n    and price > 150\n\n", "relation_name": "\"property_cro\".\"analytics_rentals_flats\".\"vw_avg_ask_px_per_loc\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.136213Z", "completed_at": "2024-02-25T08:14:44.140658Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.143072Z", "completed_at": "2024-02-25T08:14:44.143076Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018871068954467773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_year_size_rentals_flats", "compiled": true, "compiled_code": "\n\n\n\nselect distinct\n\tlocation,\n    FLOOR(year_built / 20) * 20 as year_range,\n    FLOOR(size / 20) * 20 as size,\n\tcount(distinct vh.ad_id) area_total_ads,\n\tavg(price/size) as area_average\nfrom \"property_cro\".\"analytics_rentals_flats\".\"mv_price_history\" vh\njoin \"property_cro\".\"staging\".\"rental_flat_desc\" sd on vh.ad_id = sd.ad_id\nWHERE last_seen >=  now()::date - INTERVAL '360 DAY'\n    and year_built is not null and size is not null\n    and price > 150\ngroup by location, FLOOR(year_built / 20), FLOOR(size / 20)\n\n", "relation_name": "\"property_cro\".\"analytics_rentals_flats\".\"vw_avg_ask_px_per_loc_year_size\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.133320Z", "completed_at": "2024-02-25T08:14:44.141197Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.143878Z", "completed_at": "2024-02-25T08:14:44.143882Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020324230194091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_size_rentals_flats", "compiled": true, "compiled_code": "\n\n\n\nselect distinct \n\tlocation,\n    FLOOR(size / 20) * 20 as size,\n\tcount(distinct ad_id) area_total_ads,\n\tavg(price/size) as area_average\nfrom \"property_cro\".\"analytics_rentals_flats\".\"mv_price_history\"\nWHERE last_seen >  now()::date - INTERVAL '360 DAY'\n    and price > 150\ngroup by location, FLOOR(size / 20)\n\n", "relation_name": "\"property_cro\".\"analytics_rentals_flats\".\"vw_avg_ask_px_per_loc_size\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.148502Z", "completed_at": "2024-02-25T08:14:44.155805Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.160224Z", "completed_at": "2024-02-25T08:14:44.160230Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01558685302734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_sales_flats", "compiled": true, "compiled_code": "\n\n\n\nselect distinct\n\tlocation,\n\tcount(ad_id) over (partition by location) as area_total_ads,\n\tavg(price/size) over (partition by location) as area_average\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_price_history\"\nwhere last_seen > now()::date - INTERVAL '270 DAY'\n    and price > 30000\n\n", "relation_name": "\"property_cro\".\"analytics_sales_flats\".\"vw_avg_ask_px_per_loc\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.151150Z", "completed_at": "2024-02-25T08:14:44.159024Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.161008Z", "completed_at": "2024-02-25T08:14:44.161011Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01591324806213379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_size_sales_flats", "compiled": true, "compiled_code": "\n\n\n\nselect distinct \n\tlocation,\n    FLOOR(size / 20) * 20 as size,\n\tcount(distinct ad_id) area_total_ads,\n\tavg(price/size) as area_average\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_price_history\"\nWHERE last_seen >  now()::date - INTERVAL '270 DAY'\n    and price > 30000\ngroup by location, FLOOR(size / 20)\n\n", "relation_name": "\"property_cro\".\"analytics_sales_flats\".\"vw_avg_ask_px_per_loc_size\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.153558Z", "completed_at": "2024-02-25T08:14:44.159685Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.162026Z", "completed_at": "2024-02-25T08:14:44.162030Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016052961349487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_year_size_sales_flats", "compiled": true, "compiled_code": "\n\n\n\nselect distinct\n\tlocation,\n    FLOOR(year_built / 20) * 20 as year_range,\n    FLOOR(size / 20) * 20 as size,\n\tcount(distinct vh.ad_id) area_total_ads,\n\tavg(price/size) as area_average\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_price_history\" vh\njoin \"property_cro\".\"staging\".\"sale_flat_desc\" sd on vh.ad_id = sd.ad_id\nWHERE last_seen >=  now()::date - INTERVAL '270 DAY'\n    and year_built is not null and size is not null\n    and price > 30000\ngroup by location, FLOOR(year_built / 20), FLOOR(size / 20)\n\n", "relation_name": "\"property_cro\".\"analytics_sales_flats\".\"vw_avg_ask_px_per_loc_year_size\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.156144Z", "completed_at": "2024-02-25T08:14:44.160493Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.163084Z", "completed_at": "2024-02-25T08:14:44.163087Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016574859619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_sales_houses", "compiled": true, "compiled_code": "\n\n\n\nselect distinct\n\tlocation,\n\tcount(ad_id) over (partition by location) as area_total_ads,\n\tavg(price/size) over (partition by location) as area_average\nfrom \"property_cro\".\"analytics_sales_houses\".\"mv_price_history\"\nwhere last_seen > now()::date - INTERVAL '270 DAY'\n    and price > 30000\n\n", "relation_name": "\"property_cro\".\"analytics_sales_houses\".\"vw_avg_ask_px_per_loc\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.166806Z", "completed_at": "2024-02-25T08:14:44.178067Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.179796Z", "completed_at": "2024-02-25T08:14:44.179802Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01687908172607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_size_sales_houses", "compiled": true, "compiled_code": "\n\n\n\nselect distinct \n\tlocation,\n    FLOOR(size / 20) * 20 as size,\n\tcount(distinct ad_id) area_total_ads,\n\tavg(price/size) as area_average\nfrom \"property_cro\".\"analytics_sales_houses\".\"mv_price_history\"\nWHERE last_seen >  now()::date - INTERVAL '270 DAY'\n    and price > 30000\ngroup by location, FLOOR(size / 20)\n\n", "relation_name": "\"property_cro\".\"analytics_sales_houses\".\"vw_avg_ask_px_per_loc_size\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.169565Z", "completed_at": "2024-02-25T08:14:44.178422Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.180072Z", "completed_at": "2024-02-25T08:14:44.180075Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016232967376708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.3vw_avg_ask_px_per_loc_year_size_sales_houses", "compiled": true, "compiled_code": "\n\n\n\nselect distinct\n\tlocation,\n    FLOOR(year_built / 20) * 20 as year_range,\n    FLOOR(size / 20) * 20 as size,\n\tcount(distinct vh.ad_id) area_total_ads,\n\tavg(price/size) as area_average\nfrom \"property_cro\".\"analytics_sales_houses\".\"mv_price_history\" vh\njoin \"property_cro\".\"staging\".\"sale_house_desc\" sd on vh.ad_id = sd.ad_id\nWHERE last_seen >=  now()::date - INTERVAL '270 DAY'\n    and year_built is not null and size is not null\n    and price > 30000\ngroup by location, FLOOR(year_built / 20), FLOOR(size / 20)\n\n", "relation_name": "\"property_cro\".\"analytics_sales_houses\".\"vw_avg_ask_px_per_loc_year_size\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.172098Z", "completed_at": "2024-02-25T08:14:44.179266Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.181854Z", "completed_at": "2024-02-25T08:14:44.181858Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016548871994018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.4mv_enriched_ad_rentals_flats", "compiled": true, "compiled_code": "\n\nselect\n    \n    s.location,\n    s.title,\n    s.link,\n    s.flat_type,\n    s.floor,\n    s.size,\n    s.price,\n    s.first_price,\n    s.current_price,\n    s.num_seen,\n    round((s.price/s.size)::numeric, 1) as price_m2,\n    round(a.area_average::numeric, 1) as area_price_m2,\n    round((100 * (a.area_average - s.price/s.size) / a.area_average)::numeric, 1) as area_discount,\n    round(a2.area_average::numeric, 1) as area_sized_price_m2,\n    round((100 * (a2.area_average - s.price/s.size) / a2.area_average)::numeric, 1) as area_sized_discount,\n    round(a3.area_average::numeric, 1) as area_aged_sized_price_m2,\n    round((100 * (a3.area_average - s.price/s.size) / a3.area_average)::numeric, 1)  as area_aged_sized_discount,\n    round(((s.first_price - s.price)/s.first_price * 100)::numeric, 1)  as price_drop_pecentage,\n    s.first_seen,\n    s.last_seen,\n    s.ad_id,\n    s.latest_seen_date,\n    s.status,\n    s.days_on_the_market,\n    s.price_3,\n    s.price_7,\n    s.price_15,\n    s.price_30,\n    s.price_45,\n    s.price_60,\n    sd.url,\n    sd.location2,\n    sd.street,\n    sd.num_views,\n    sd.advertiser,\n    sd.number_of_floors,\n    sd.year_built,\n    sd.year_last_renovated,\n    sd.total_liveable_area,\n    sd.net_area,\n    sd.number_of_rooms,\n    sd.number_of_parking_spots,\n    sd.balcony_terrace,\n    case when RIGHT(sd.floor, 1) like '.'\n        then SUBSTR(sd.floor, 1, LENGTH(sd.floor)-1)\n        else sd.floor\n    end as floor_desc,\n    sd.furbishment_state,\n    sd.epc_rating,\n    sd.table_data,\n    sd.description,\n    sd.extra_description,\n    sd.seen_time,\n\n    sd.apartment_type,\n    case\n        when RIGHT(sd.total_number_of_floors_in_building, 1) like '.'\n            then SUBSTR(sd.total_number_of_floors_in_building, 1, LENGTH(sd.total_number_of_floors_in_building)-1)::integer\n        when lower(sd.total_number_of_floors_in_building) like '%prizemlje%'\n            then 1\n        when sd.total_number_of_floors_in_building like '25+'\n            then 25\n        else sd.total_number_of_floors_in_building::integer\n    end as total_number_of_floors_in_building\nfrom \"property_cro\".\"analytics_rentals_flats\".\"mv_price_history\" s\njoin \"property_cro\".\"analytics_rentals_flats\".\"vw_avg_ask_px_per_loc\"  a on s.location = a.location\nleft join \"property_cro\".\"staging\".\"rental_flat_desc\" sd on s.ad_id = sd.ad_id\nleft join \"property_cro\".\"analytics_rentals_flats\".\"vw_avg_ask_px_per_loc_size\" a2 on s.location = a2.location and FLOOR(s.size / 20) * 20 = a2.size\nleft join \"property_cro\".\"analytics_rentals_flats\".\"vw_avg_ask_px_per_loc_year_size\" a3 on s.location = a3.location and FLOOR(s.size / 20) * 20 = a3.size and FLOOR(sd.year_built / 20) * 20 = a3.year_range", "relation_name": "\"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.175424Z", "completed_at": "2024-02-25T08:14:44.179521Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.182135Z", "completed_at": "2024-02-25T08:14:44.182139Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014536857604980469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.4mv_enriched_ad_sales_flats", "compiled": true, "compiled_code": "\n\nselect\n    \n    s.location,\n    s.title,\n    s.link,\n    s.flat_type,\n    s.floor,\n    s.size,\n    s.price,\n    s.first_price,\n    s.current_price,\n    s.num_seen,\n    round((s.price/s.size)::numeric, 0) as price_m2,\n    round(a.area_average::numeric, 0) as area_price_m2,\n    round((100 * (a.area_average - s.price/s.size) / a.area_average)::numeric, 1) as area_discount,\n    round(a2.area_average::numeric, 0) as area_sized_price_m2,\n    round((100 * (a2.area_average - s.price/s.size) / a2.area_average)::numeric, 1) as area_sized_discount,\n    round(a3.area_average::numeric, 0) as area_aged_sized_price_m2,\n    round((100 * (a3.area_average - s.price/s.size) / a3.area_average)::numeric, 1)  as area_aged_sized_discount,\n    round(((s.first_price - s.price)/s.first_price * 100)::numeric, 1)  as price_drop_pecentage,\n    s.first_seen,\n    s.last_seen,\n    s.ad_id,\n    s.latest_seen_date,\n    s.status,\n    s.days_on_the_market,\n    s.price_3,\n    s.price_7,\n    s.price_15,\n    s.price_30,\n    s.price_45,\n    s.price_60,\n    sd.url,\n    sd.location2,\n    sd.street,\n    sd.num_views,\n    sd.advertiser,\n    sd.number_of_floors,\n    sd.year_built,\n    sd.year_last_renovated,\n    sd.total_liveable_area,\n    sd.net_area,\n    sd.number_of_rooms,\n    sd.number_of_parking_spots,\n    sd.balcony_terrace,\n    case when RIGHT(sd.floor, 1) like '.'\n        then SUBSTR(sd.floor, 1, LENGTH(sd.floor)-1)\n        else sd.floor\n    end as floor_desc,\n    sd.furbishment_state,\n    sd.epc_rating,\n    sd.table_data,\n    sd.description,\n    sd.extra_description,\n    sd.seen_time,\n\n    sd.apartment_type,\n    case\n        when RIGHT(sd.total_number_of_floors_in_building, 1) like '.'\n            then SUBSTR(sd.total_number_of_floors_in_building, 1, LENGTH(sd.total_number_of_floors_in_building)-1)::integer\n        when lower(sd.total_number_of_floors_in_building) like '%prizemlje%'\n            then 1\n        when sd.total_number_of_floors_in_building like '25+'\n            then 25\n        else sd.total_number_of_floors_in_building::integer\n    end as total_number_of_floors_in_building\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_price_history\" s\njoin \"property_cro\".\"analytics_sales_flats\".\"vw_avg_ask_px_per_loc\"  a on s.location = a.location\nleft join \"property_cro\".\"staging\".\"sale_flat_desc\" sd on s.ad_id = sd.ad_id\nleft join \"property_cro\".\"analytics_sales_flats\".\"vw_avg_ask_px_per_loc_size\" a2 on s.location = a2.location and FLOOR(s.size / 20) * 20 = a2.size\nleft join \"property_cro\".\"analytics_sales_flats\".\"vw_avg_ask_px_per_loc_year_size\" a3 on s.location = a3.location and FLOOR(s.size / 20) * 20 = a3.size and FLOOR(sd.year_built / 20) * 20 = a3.year_range", "relation_name": "\"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.187040Z", "completed_at": "2024-02-25T08:14:44.203061Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.204370Z", "completed_at": "2024-02-25T08:14:44.204376Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021179914474487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.4mv_enriched_ad_sales_houses", "compiled": true, "compiled_code": "\n\nselect\n    \n    s.location,\n    s.title,\n    s.link,\n    s.flat_type,\n    s.floor,\n    s.size,\n    s.price,\n    s.first_price,\n    s.current_price,\n    s.num_seen,\n    round((s.price/s.size)::numeric, 0) as price_m2,\n    round(a.area_average::numeric, 0) as area_price_m2,\n    round((100 * (a.area_average - s.price/s.size) / a.area_average)::numeric, 1) as area_discount,\n    round(a2.area_average::numeric, 0) as area_sized_price_m2,\n    round((100 * (a2.area_average - s.price/s.size) / a2.area_average)::numeric, 1) as area_sized_discount,\n    round(a3.area_average::numeric, 0) as area_aged_sized_price_m2,\n    round((100 * (a3.area_average - s.price/s.size) / a3.area_average)::numeric, 1)  as area_aged_sized_discount,\n    round(((s.first_price - s.price)/s.first_price * 100)::numeric, 1)  as price_drop_pecentage,\n    s.first_seen,\n    s.last_seen,\n    s.ad_id,\n    s.latest_seen_date,\n    s.status,\n    s.days_on_the_market,\n    s.price_3,\n    s.price_7,\n    s.price_15,\n    s.price_30,\n    s.price_45,\n    s.price_60,\n    sd.url,\n    sd.location2,\n    sd.street,\n    sd.num_views,\n    sd.advertiser,\n    sd.number_of_floors,\n    sd.year_built,\n    sd.year_last_renovated,\n    sd.total_liveable_area,\n    sd.net_area,\n    sd.number_of_rooms,\n    sd.number_of_parking_spots,\n    sd.balcony_terrace,\n    case when RIGHT(sd.floor, 1) like '.'\n        then SUBSTR(sd.floor, 1, LENGTH(sd.floor)-1)\n        else sd.floor\n    end as floor_desc,\n    sd.furbishment_state,\n    sd.epc_rating,\n    sd.table_data,\n    sd.description,\n    sd.extra_description,\n    sd.seen_time,\n\n    sd.building_type,\n    sd.house_type,\n    sd.total_number_of_floors_in_building\nfrom \"property_cro\".\"analytics_sales_houses\".\"mv_price_history\" s\njoin \"property_cro\".\"analytics_sales_houses\".\"vw_avg_ask_px_per_loc\"  a on s.location = a.location\nleft join \"property_cro\".\"staging\".\"sale_house_desc\" sd on s.ad_id = sd.ad_id\nleft join \"property_cro\".\"analytics_sales_houses\".\"vw_avg_ask_px_per_loc_size\" a2 on s.location = a2.location and FLOOR(s.size / 20) * 20 = a2.size\nleft join \"property_cro\".\"analytics_sales_houses\".\"vw_avg_ask_px_per_loc_year_size\" a3 on s.location = a3.location and FLOOR(s.size / 20) * 20 = a3.size and FLOOR(sd.year_built / 20) * 20 = a3.year_range", "relation_name": "\"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.193844Z", "completed_at": "2024-02-25T08:14:44.203773Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.206178Z", "completed_at": "2024-02-25T08:14:44.206182Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022022008895874023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_location_rentals_flats", "compiled": true, "compiled_code": "\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%' or location2 like 'Zagreba\u010dka,%'\n),\nnew_ads as (\n    select quarter,\n           s.location,\n           count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n           round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n           round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n           round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n           round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d on first_seen = date_\n    where location in (select location from zg_loc)\n    group by d.quarter, s.location\n), sold_ads as (\n    select\n        quarter,\n        s.location,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on s.first_seen = d.date_\n    where status = 'inactive'\n        and location in (select location from zg_loc)\n    group by d.quarter, s.location\n), actives as (\n    select\n        d.quarter,\n        s.location,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"rentals_flats\" s\n    join \"property_cro\".\"analytics_rentals_flats\".\"mv_price_history\" as hist2\n        on s.ad_id = hist2.ad_id\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on seen_date = date_\n    where s.location in (select location from zg_loc)\n    group by quarter, s.location\n)\nselect\n    a.quarter as year_month,\n    a.location,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\njoin sold_ads r on n.quarter = r.quarter and n.location = r.location\njoin actives a on n.quarter = a.quarter and n.location = a.location\norder by n.quarter desc\n", "relation_name": "\"property_cro\".\"analytics_rentals_flats_analysis\".\"mv_inventory_location_rentals_flats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.190065Z", "completed_at": "2024-02-25T08:14:44.204072Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.206457Z", "completed_at": "2024-02-25T08:14:44.206460Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02290487289428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_general_location_rentals_flats", "compiled": true, "compiled_code": "\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%' or location2 like 'Zagreba\u010dka,%'\n),\nnew_ads as (\n    select quarter,\n           substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n           count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n           round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n           round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n           round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n           round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d on first_seen = date_\n    where location in (select location from zg_loc)\n    group by d.quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n), sold_ads as (\n    select\n        quarter,\n        substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on s.first_seen = d.date_\n    where status = 'inactive'\n        and location in (select location from zg_loc)\n    group by d.quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n), actives as (\n    select\n        d.quarter,\n        substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"rentals_flats\" s\n    join \"property_cro\".\"analytics_rentals_flats\".\"mv_price_history\" as hist2\n        on s.ad_id = hist2.ad_id\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on seen_date = date_\n    where s.location in (select location from zg_loc)\n    group by quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n)\nselect\n    a.quarter as year_month,\n    a.location,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\njoin sold_ads r on n.quarter = r.quarter and n.location = r.location\njoin actives a on n.quarter = a.quarter and n.location = a.location\norder by n.quarter desc\n", "relation_name": "\"property_cro\".\"analytics_rentals_flats_analysis\".\"mv_inventory_general_location_rentals_flats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.198385Z", "completed_at": "2024-02-25T08:14:44.204645Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.207148Z", "completed_at": "2024-02-25T08:14:44.207151Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022799253463745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_rentals_flats", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%'\n),\nnew_ads as (\n    select\n        cast(to_char(first_seen,'YYYYmm') as integer) as year_month,\n        count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\"\n    where location in (select location from zg_loc)\n    group by cast(to_char(first_seen, 'YYYYmm') as integer)\n), sold_ads as (\n    select\n        cast(to_char(last_seen,'YYYYmm') as integer) as year_month,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\"\n    where status = 'inactive'\n      and location in (select location from zg_loc)\n    group by cast(to_char(last_seen,'YYYYmm') as integer)\n), actives as (\n    select\n        cast(to_char(seen_date,'YYYYmm') as integer) as year_month,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"rentals_flats\" s\n    join \"property_cro\".\"analytics_rentals_flats\".\"mv_price_history\" as hist2\n    on s.ad_id = hist2.ad_id\n    where s.location in (select location from zg_loc)\n    group by cast(to_char(seen_date, 'YYYYmm') as integer)\n)\nselect\n    TO_DATE(concat(n.year_month,'01'), 'YYYYMMDD') as year_month,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\n         join sold_ads r on n.year_month = r.year_month\n         join actives a on n.year_month = a.year_month\norder by n.year_month desc\n\n", "relation_name": "\"property_cro\".\"analytics_rentals_flats_analysis\".\"mv_inventory_rentals_flats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.211136Z", "completed_at": "2024-02-25T08:14:44.221139Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.221949Z", "completed_at": "2024-02-25T08:14:44.221956Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014877796173095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_general_location_sales_flats", "compiled": true, "compiled_code": "\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%' or location2 like 'Zagreba\u010dka,%'\n),\nnew_ads as (\n    select quarter,\n           substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n           count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n           round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n           round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n           round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n           round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d on first_seen = date_\n    where location in (select location from zg_loc)\n    group by d.quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n), sold_ads as (\n    select\n        quarter,\n        substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on s.first_seen = d.date_\n    where status = 'inactive'\n        and location in (select location from zg_loc)\n    group by d.quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n), actives as (\n    select\n        d.quarter,\n        substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"sales_flats\" s\n    join \"property_cro\".\"analytics_sales_flats\".\"mv_price_history\" as hist2\n        on s.ad_id = hist2.ad_id\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on seen_date = date_\n    where s.location in (select location from zg_loc)\n    group by quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n)\nselect\n    a.quarter as year_month,\n    a.location,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\njoin sold_ads r on n.quarter = r.quarter and n.location = r.location\njoin actives a on n.quarter = a.quarter and n.location = a.location\norder by n.quarter desc\n", "relation_name": "\"property_cro\".\"analytics_sales_flats_analysis\".\"mv_inventory_general_location_sales_flats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.214600Z", "completed_at": "2024-02-25T08:14:44.222278Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.224697Z", "completed_at": "2024-02-25T08:14:44.224700Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015692710876464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_location_sales_flats", "compiled": true, "compiled_code": "\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%' or location2 like 'Zagreba\u010dka,%'\n),\nnew_ads as (\n    select quarter,\n           s.location,\n           count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n           round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n           round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n           round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n           round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d on first_seen = date_\n    where location in (select location from zg_loc)\n    group by d.quarter, s.location\n), sold_ads as (\n    select\n        quarter,\n        s.location,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on s.first_seen = d.date_\n    where status = 'inactive'\n        and location in (select location from zg_loc)\n    group by d.quarter, s.location\n), actives as (\n    select\n        d.quarter,\n        s.location,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"sales_flats\" s\n    join \"property_cro\".\"analytics_sales_flats\".\"mv_price_history\" as hist2\n        on s.ad_id = hist2.ad_id\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on seen_date = date_\n    where s.location in (select location from zg_loc)\n    group by quarter, s.location\n)\nselect\n    a.quarter as year_month,\n    a.location,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\njoin sold_ads r on n.quarter = r.quarter and n.location = r.location\njoin actives a on n.quarter = a.quarter and n.location = a.location\norder by n.quarter desc\n", "relation_name": "\"property_cro\".\"analytics_sales_flats_analysis\".\"mv_inventory_location_sales_flats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.218867Z", "completed_at": "2024-02-25T08:14:44.222557Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.224977Z", "completed_at": "2024-02-25T08:14:44.224980Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013148069381713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.vw_best_new_or_reduced_alert_sales_flats", "compiled": true, "compiled_code": "\n\nselect location,\n       title,\n       link,\n       flat_type,\n       floor,\n       size,\n       price,\n       first_price,\n       current_price,\n       num_seen,\n       price_m2,\n       area_price_m2,\n       area_discount,\n       area_sized_price_m2,\n       area_aged_sized_price_m2,\n       price_drop_pecentage,\n       first_seen,\n       last_seen,\n       ad_id,\n       latest_seen_date,\n       status,\n       days_on_the_market,\n       price_7,\n       price_15,\n       price_30,\n       price_45,\n       price_60,\n       url,\n       location2,\n       street,\n       num_views,\n       apartment_type,\n       number_of_floors,\n       year_built,\n       year_last_renovated,\n       total_liveable_area,\n       net_area,\n       number_of_rooms,\n       number_of_parking_spots,\n       balcony_terrace,\n       total_number_of_floors_in_building,\n       furbishment_state,\n       epc_rating,\n       table_data,\n       description,\n       extra_description,\n       seen_time,\n       advertiser\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\nwhere\n    location in (select location from \"property_cro\".\"analytics_common\".\"zagreb_locations\") and\n    status = 'active' and\n    (floor is null or total_number_of_floors_in_building is null or floor_desc != total_number_of_floors_in_building::text)\n \tand (\n        (floor is null or floor like '%kat%')\n        or\n        (floor is null or floor like '%kat%')\n    )\n\tand (total_number_of_floors_in_building is null or total_number_of_floors_in_building > 2)\n \tand (description is null or lower(description) not like '%potkrovlj%' )\n\tand\n    (\n\t    (year_built > 1970 and year_built < 1980 and (\n            price/net_area < 1.1 * area_price_m2\n            or price/total_liveable_area < 1.1 * area_price_m2\n        ))\n        or\n\t    (year_built >= 1980 and year_built < 2001 and (\n            price/net_area < 1.25 * area_price_m2\n            or price/total_liveable_area < 1.25 * area_price_m2\n        ))\n\t    or\n\t    (year_built >= 2001\n\t         and (\n                price / net_area < 1.5 * area_price_m2\n                or price / total_liveable_area < 1.5 * area_price_m2)\n\t    )\n    )\n\tand (\n\t\tlower(title) like '%adaptiran%'\n\t\tor lower(title) like '%renoviran%'\n\t\tor lower(description) like '%adaptiran%'\n        or lower(description) like '%renoviran%'\n\t\tor year_built > 2000\n\t\tor year_last_renovated > 2000\n\t\tor (year_built between 1984 and 2000 and price_m2 < area_price_m2 * 1.1)\n\t\tor (year_built between 1971 and 1983 and price_m2 < area_price_m2 * 1.25)\n\t\tor (year_built is null and year_last_renovated is null)\n\t)\n    and (\n        (lower(title) not like '%adaptacij%' and lower(title) not like '%renovacij%' and lower(title) not like '%mansardni%')\n        or (lower(description) not like '%adaptacij%' and lower(description) not like '%renovacij%' and lower(description) not like '%mansardni%')\n\t)\n\tand flat_type = 'Stan u stambenoj zgradi'\n    and price > 50000\n    and price_m2 < 4000\n    and ((price <= 210000 and year_built < 2005) or (year_built >= 2005 and price <= 300000))\n    and (number_of_floors = 'Jednoeta\u017eni' or number_of_floors is null)\n    and location not like 'Sesvete%'\n    and location not like 'Podsljeme%'\n    and location not like 'Novi Zagreb - Zapad, Lu\u010dko'\n    order by first_seen desc", "relation_name": "\"property_cro\".\"analytics_sales_flats_alerts\".\"vw_best_new_or_reduced_flats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.216803Z", "completed_at": "2024-02-25T08:14:44.222815Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.225248Z", "completed_at": "2024-02-25T08:14:44.225251Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01632380485534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_sales_flats", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%'\n),\nnew_ads as (\n    select\n        cast(to_char(first_seen,'YYYYmm') as integer) as year_month,\n        count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\n    where location in (select location from zg_loc)\n    group by cast(to_char(first_seen, 'YYYYmm') as integer)\n), sold_ads as (\n    select\n        cast(to_char(last_seen,'YYYYmm') as integer) as year_month,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\n    where status = 'inactive'\n      and location in (select location from zg_loc)\n    group by cast(to_char(last_seen,'YYYYmm') as integer)\n), actives as (\n    select\n        cast(to_char(seen_date,'YYYYmm') as integer) as year_month,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"sales_flats\" s\n    join \"property_cro\".\"analytics_sales_flats\".\"mv_price_history\" as hist2\n    on s.ad_id = hist2.ad_id\n    where s.location in (select location from zg_loc)\n    group by cast(to_char(seen_date, 'YYYYmm') as integer)\n)\nselect\n    TO_DATE(concat(n.year_month,'01'), 'YYYYMMDD') as year_month,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\n         join sold_ads r on n.year_month = r.year_month\n         join actives a on n.year_month = a.year_month\norder by n.year_month desc\n\n", "relation_name": "\"property_cro\".\"analytics_sales_flats_analysis\".\"mv_inventory_sales_flats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.228512Z", "completed_at": "2024-02-25T08:14:44.233861Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.241536Z", "completed_at": "2024-02-25T08:14:44.241542Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0172119140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.vw_best_streets_in_zagreb", "compiled": true, "compiled_code": "\n\nselect location,\n       title,\n       link,\n       flat_type,\n       floor,\n       size,\n       price,\n       first_price,\n       current_price,\n       num_seen,\n       price_m2,\n       area_price_m2,\n       area_discount,\n       area_sized_price_m2,\n       area_aged_sized_price_m2,\n       price_drop_pecentage,\n       first_seen,\n       last_seen,\n       ad_id,\n       latest_seen_date,\n       status,\n       days_on_the_market,\n       price_7,\n       price_15,\n       price_30,\n       price_45,\n       price_60,\n       url,\n       location2,\n       street,\n       num_views,\n       apartment_type,\n       number_of_floors,\n       year_built,\n       year_last_renovated,\n       total_liveable_area,\n       net_area,\n       number_of_rooms,\n       number_of_parking_spots,\n       balcony_terrace,\n       total_number_of_floors_in_building,\n       furbishment_state,\n       epc_rating,\n       table_data,\n       description,\n       extra_description,\n       seen_time,\n       advertiser\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\nwhere\n(\n    -- sredi\u0161\u0107e\n    lower(description) like '%brune bu\u0161i\u0107a%' or\n    lower(title) like '%brune bu\u0161i\u0107a%' or\n    lower(description) like '%knifer%' or\n    lower(title) like '%knifer%' or\n    lower(description) like '%kantoci%' or\n    lower(title) like '%kantoci%' or\n    lower(description) like '%baki\u0107%' or\n    lower(title) like '%baki\u0107%' or\n        -- savica\n    lower(description) like '%lastovska%' or\n    lower(title) like '%lastovska%' or\n    lower(description) like '%zinke kunc%' or\n    lower(title) like '%zinke kunc%' or\n    lower(description) like '%zinke kunc%' or\n    lower(title) like '%zinke kunc%' or\n    -- borovje\n    lower(description) like '%grada chicaga%' or\n    lower(title) like '%grada chicaga%' or\n    lower(description) like '%mi\u0161eve\u010dka%' or\n    lower(title) like '%mi\u0161eve\u010dka%' or\n    -- sige\u010dica\n    lower(description) like '%rapska%' or\n    lower(title) like '%rapska%' or\n    lower(description) like '%kornatska%' or\n    lower(title) like '%kornatska%' or\n    lower(description) like '%folnegovi\u0107a%' or\n    lower(title) like '%folnegovi\u0107a%' or\n    -- cvjetno naselje\n    lower(description) like '%cvjetna cesta%' or\n    lower(title) like '%cvjetna cesta%' or\n    -- maksimir\n    lower(description) like '%kraljevi\u0107eva%' or\n    lower(title) like '%kraljevi\u0107eva%' or\n    lower(description) like '%bo\u017eidarevi\u0107eva%' or\n    lower(title) like '%bo\u017eidarevi\u0107eva%' or\n    lower(description) like '%\u010diko\u0161eva%' or\n    lower(title) like '%\u010diko\u0161eva%' or\n    lower(description) like '%crn\u010di\u0107eva%' or\n    lower(title) like '%crn\u010di\u0107eva%' or\n    lower(description) like '%klovi\u0107eva%' or\n    lower(title) like '%klovi\u0107eva%' or\n    lower(description) like '%bu\u017eanova%' or\n    lower(title) like '%bu\u017eanova%' or\n    lower(description) like '%haramba\u0161i\u0107eva%' or\n    lower(title) like '%haramba\u0161i\u0107eva%' or\n    lower(description) like '%ru\u017emarink%' or\n    lower(title) like '%ru\u017emarink%' or\n    lower(description) like '%\u010derinina%' or\n    lower(title) like '%\u010derinina%' or\n    -- centar\n    lower(description) like '%jurkovi\u0107ev%' or\n    lower(title) like '%jurkovi\u0107ev%' or\n    lower(description) like '%centar zvonimir%' or\n    lower(title) like '%centar zvonimir%' or\n    lower(description) like '%banjav\u010di\u0107ev%' or\n    lower(title) like '%banjav\u010di\u0107ev%' or\n    lower(description) like '%ljudevita posavskog%' or\n    lower(title) like '%ljudevita posavskog%' or\n    lower(description) like '%vrbani\u0107eva%' or\n    lower(title) like '%vrbani\u0107eva%' or\n    -- trnje\n    lower(description) like '%pile%' or\n    lower(title) like '%pile%' or\n    lower(description) like '%\u0161trigina%' or\n    lower(title) like '%\u0161trigina%' or\n    lower(description) like '%supilova%' or\n    lower(title) like '%supilova%' or\n    lower(description) like '%strojarska%' or\n    lower(title) like '%strojarska%' or\n    -- crnomerec\n    lower(description) like '%bleiweisova%' or\n    lower(title) like '%bleiweisova%' or\n    lower(description) like '%slovenska%' or\n    lower(title) like '%slovenska%' or\n    -- vrbani\n    lower(description) like '%palinove\u010dka%' or\n    lower(title) like '%palinove\u010dka%' or\n    -- jarun\n    lower(description) like '%hrgovi\u0107i%' or\n    lower(title) like '%hrgovi\u0107i%' or\n    lower(description) like '%bernarda vukasa%' or\n    lower(title) like '%bernarda vukasa%' or\n    lower(description) like '%stipan\u010di\u0107a%' or\n    lower(title) like '%stipan\u010di\u0107a%' or\n    lower(description) like '%macanovi\u0107a%' or\n    lower(title) like '%macanovi\u0107a%' or\n    lower(description) like '%ljubi\u0107a vojvode%' or\n    lower(title) like '%ljubi\u0107a vojvode%' or\n    -- jarun\n    lower(location) like '%jarun%' or\n    lower(location) like '%gredice%' or\n    -- ravnice\n    lower(description) like '%radau\u0161eva%' or\n    lower(title) like '%radau\u0161eva%' or\n    lower(description) like '%augustin\u010di\u0107a%' or\n    lower(title) like '%augustin\u010di\u0107a%' or\n    lower(description) like '%\u0161eferova%' or\n    lower(title) like '%\u0161eferova%'\n)\nand (year_built > 1970 or year_built is null or description not like '%starij%')\nand status = 'active'\nand (floor is null or total_number_of_floors_in_building is null or floor_desc != total_number_of_floors_in_building::text)\nand number_of_floors = 'Jednoeta\u017eni'\nand floor like '%kat'\nand flat_type = 'Stan u stambenoj zgradi'\nand (furbishment_state is null or furbishment_state!= 'Za renoviranje')\nand size > 30\nand price between 60000 and 190000\nand price_m2 <= 3500\norder by first_seen desc", "relation_name": "\"property_cro\".\"analytics_sales_flats_alerts\".\"vw_best_streets_zg\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.236365Z", "completed_at": "2024-02-25T08:14:44.241829Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.244454Z", "completed_at": "2024-02-25T08:14:44.244457Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013567924499511719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.vw_modern_central_alert_sales_flats", "compiled": true, "compiled_code": "\n\nselect location,\n       title,\n       link,\n       flat_type,\n       floor,\n       size,\n       price,\n       first_price,\n       current_price,\n       num_seen,\n       price_m2,\n       area_price_m2,\n       area_discount,\n       area_sized_price_m2,\n       area_aged_sized_price_m2,\n       price_drop_pecentage,\n       first_seen,\n       last_seen,\n       ad_id,\n       latest_seen_date,\n       status,\n       days_on_the_market,\n       price_3,\n       price_7,\n       price_15,\n       price_30,\n       price_45,\n       price_60,\n       url,\n       location2,\n       street,\n       num_views,\n       apartment_type,\n       number_of_floors,\n       year_built,\n       year_last_renovated,\n       total_liveable_area,\n       net_area,\n       number_of_rooms,\n       number_of_parking_spots,\n       balcony_terrace,\n       total_number_of_floors_in_building,\n       furbishment_state,\n       epc_rating,\n       table_data,\n       description,\n       extra_description,\n       seen_time,\n       advertiser\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\nwhere\n  location in (select location from \"property_cro\".\"analytics_common\".\"zagreb_locations\") and\n     (\n        (year_built > 1970 )\n        or ((lower(title) like '%novogradnj%' or lower(title) like '%novij%'\n            or lower(description) like '%novogradnj%' or lower(description) like '%novij%')\n            AND year_built is null\n        )\n     )\n--     and number_of_rooms >= 1\n--      and (total_number_of_floors_in_building > 3 or total_number_of_floors_in_building is null)\n--       and ((number_of_rooms = 3 and price <= 185000 and price_m2 < area_price_m2 and year_built > 1980)\n--                or (number_of_rooms = 2 and price <= 140000 and price_m2 < area_price_m2 and year_built > 1965))\n    and status = 'active'\n    and number_of_rooms > 0\n    and price >= 55000\n    and price <= 250000\n--     and (\n--             (price <= 180000 and number_of_rooms = 3)\n--             or (price <= 150000 and number_of_rooms = 2)\n--     )\n    and price_m2 >= 1200\n    and price_m2 <= 3700\n    and price_m2 < 1.5 * area_aged_sized_price_m2\n    and (number_of_floors = 'Jednoeta\u017eni' or number_of_floors is null)\n    and (total_number_of_floors_in_building is null\n             or floor_desc is null\n            or (floor_desc != total_number_of_floors_in_building::text and floor_desc is not null)\n        )\n    and (floor is null or floor like '%kat%')\n    and size > 25\n    and (flat_type is null or flat_type not like 'Stan u ku\u0107i')\n    order by first_seen desc", "relation_name": "\"property_cro\".\"analytics_sales_flats_alerts\".\"vw_modern_central_flats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.234129Z", "completed_at": "2024-02-25T08:14:44.242134Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.244733Z", "completed_at": "2024-02-25T08:14:44.244736Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014461040496826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.vw_large_price_drops_alert_sales_flats", "compiled": true, "compiled_code": "\n\nselect location,\n       title,\n       link,\n       flat_type,\n       floor,\n       size,\n       price,\n       first_price,\n       current_price,\n       num_seen,\n       price_m2,\n       area_price_m2,\n       area_discount,\n       area_sized_price_m2,\n       area_aged_sized_price_m2,\n       price_drop_pecentage,\n       first_seen,\n       last_seen,\n       ad_id,\n       latest_seen_date,\n       status,\n       days_on_the_market,\n       price_3,\n       price_7,\n       price_15,\n       price_30,\n       price_45,\n       price_60,\n       url,\n       location2,\n       street,\n       num_views,\n       apartment_type,\n       number_of_floors,\n       year_built,\n       year_last_renovated,\n       total_liveable_area,\n       net_area,\n       number_of_rooms,\n       number_of_parking_spots,\n       balcony_terrace,\n       total_number_of_floors_in_building,\n       furbishment_state,\n       epc_rating,\n       table_data,\n       description,\n       extra_description,\n       seen_time,\n       advertiser\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\nwhere\n    location in (select location from \"property_cro\".\"analytics_common\".\"zagreb_locations\") and\n    floor like '%kat%'\n    and size > 28\n    and size < 99\n    and current_price between 10000 and 210000\n    and current_price between 0.4 * first_price and 0.99 * first_price\n    and (\n        (location2 is null and price_m2 < area_price_m2 * 1.45)\n        or\n        (location2 is not null and\n            (\n                (year_built > 2000 and price_m2 < area_price_m2 * 1.6)\n                or\n                (year_built < 2000 and price_m2 < area_price_m2 * 1.5)\n            )\n            and (year_built is null or year_built > 1970)\n            and (floor is null or total_number_of_floors_in_building is null or floor_desc != total_number_of_floors_in_building::text)\n            and (description is null or lower(description) not like '%potkrovlj%' )\n        )\n    )\n    and (total_number_of_floors_in_building is null\n            or (floor_desc != total_number_of_floors_in_building::text and floor_desc is not null)\n    )\n    and flat_type = 'Stan u stambenoj zgradi'\n    and status = 'active'\norder by first_seen desc", "relation_name": "\"property_cro\".\"analytics_sales_flats_alerts\".\"vw_large_price_drops\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.238524Z", "completed_at": "2024-02-25T08:14:44.243123Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.245417Z", "completed_at": "2024-02-25T08:14:44.245420Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01441812515258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.vw_new_ads_alert_sales_flats", "compiled": true, "compiled_code": "\n\nselect\n       m1.location,\n       m1.title,\n       m1.link,\n       m1.flat_type,\n       m1.floor,\n       m1.size,\n       m1.price,\n       m1.first_price,\n       m1.current_price,\n       m1.num_seen,\n       m1.price_m2,\n       m1.area_price_m2,\n       m1.area_discount,\n       m1.area_sized_price_m2,\n       m1.area_sized_discount,\n       m1.area_aged_sized_price_m2,\n       m1.area_aged_sized_discount,\n       m1.price_drop_pecentage,\n       m1.first_seen,\n       m1.last_seen,\n       m1.ad_id,\n       m1.latest_seen_date,\n       m1.status,\n       m1.days_on_the_market,\n       m1.price_7,\n       m1.price_15,\n       m1.price_30,\n       m1.price_45,\n       m1.price_60,\n       m1.url,\n       m1.location2,\n       m1.street,\n       m1.num_views,\n       m1.apartment_type,\n       m1.number_of_floors,\n       m1.year_built,\n       m1.year_last_renovated,\n       m1.total_liveable_area,\n       m1.net_area,\n       m1.number_of_rooms,\n       m1.number_of_parking_spots,\n       m1.balcony_terrace,\n       m1.total_number_of_floors_in_building,\n       m1.furbishment_state,\n       m1.epc_rating,\n       m1.table_data,\n       m1.description,\n       m1.extra_description,\n       m1.seen_time,\n       m1.advertiser\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\" as m1\nwhere\n    m1.location in (select location from \"property_cro\".\"analytics_common\".\"zagreb_locations\")\n    and m1.floor like '%kat%'\n    and (\n        (m1.price between 100000 and 250000 and (m1.year_built is null or m1.year_built >= 1971))\n    )\n    and m1.price > 1000\n    and m1.first_seen between now()::date - INTERVAL '7 DAY' and now()::date\n    and m1.status = 'active'\norder by m1.first_seen desc", "relation_name": "\"property_cro\".\"analytics_sales_flats_alerts\".\"vw_new_ads\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.248003Z", "completed_at": "2024-02-25T08:14:44.252130Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.263346Z", "completed_at": "2024-02-25T08:14:44.263353Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019477128982543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.vw_price_drops_alert_sales_flats", "compiled": true, "compiled_code": "\n\nselect\n       m1.location,\n       m1.title,\n       m1.link,\n       m1.flat_type,\n       m1.floor,\n       m1.size,\n       m1.price,\n       m1.first_price,\n       m1.current_price,\n       m1.num_seen,\n       m1.price_m2,\n       m1.area_price_m2,\n       m1.area_discount,\n       m1.area_sized_price_m2,\n       m1.area_sized_discount,\n       m1.area_aged_sized_price_m2,\n       m1.area_aged_sized_discount,\n       m1.price_drop_pecentage,\n       m1.first_seen,\n       m1.last_seen,\n       m1.ad_id,\n       m1.latest_seen_date,\n       m1.status,\n       m1.days_on_the_market,\n       m1.price_7,\n       m1.price_15,\n       m1.price_30,\n       m1.price_45,\n       m1.price_60,\n       m1.url,\n       m1.location2,\n       m1.street,\n       m1.num_views,\n       m1.apartment_type,\n       m1.number_of_floors,\n       m1.year_built,\n       m1.year_last_renovated,\n       m1.total_liveable_area,\n       m1.net_area,\n       m1.number_of_rooms,\n       m1.number_of_parking_spots,\n       m1.balcony_terrace,\n       m1.total_number_of_floors_in_building,\n       m1.furbishment_state,\n       m1.epc_rating,\n       m1.table_data,\n       m1.description,\n       m1.extra_description,\n       m1.seen_time,\n       m1.advertiser\nfrom \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\" as m1\nwhere\n    m1.floor like '%kat%'\n    and m1.price <= 250000\n    and m1.price > 1000\n    and m1.current_price < m1.price_7 * 0.98\n    and m1.status = 'active'\norder by m1.first_seen desc", "relation_name": "\"property_cro\".\"analytics_sales_flats_alerts\".\"vw_price_drops\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.257545Z", "completed_at": "2024-02-25T08:14:44.263980Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.265991Z", "completed_at": "2024-02-25T08:14:44.265994Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01626896858215332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_general_location_sales_houses", "compiled": true, "compiled_code": "\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%' or location2 like 'Zagreba\u010dka,%'\n),\nnew_ads as (\n    select quarter,\n           substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n           count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n           round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n           round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n           round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n           round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d on first_seen = date_\n    where location in (select location from zg_loc)\n    group by d.quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n), sold_ads as (\n    select\n        quarter,\n        substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on s.first_seen = d.date_\n    where status = 'inactive'\n        and location in (select location from zg_loc)\n    group by d.quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n), actives as (\n    select\n        d.quarter,\n        substring(s.location FROM 1 FOR position(',' IN s.location) - 1) as location,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"sales_houses\" s\n    join \"property_cro\".\"analytics_sales_houses\".\"mv_price_history\" as hist2\n        on s.ad_id = hist2.ad_id\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on seen_date = date_\n    where s.location in (select location from zg_loc)\n    group by quarter, substring(s.location FROM 1 FOR position(',' IN s.location) - 1)\n)\nselect\n    a.quarter as year_month,\n    a.location,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\njoin sold_ads r on n.quarter = r.quarter and n.location = r.location\njoin actives a on n.quarter = a.quarter and n.location = a.location\norder by n.quarter desc\n", "relation_name": "\"property_cro\".\"analytics_sales_houses_analysis\".\"mv_inventory_general_location_sales_houses\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.260903Z", "completed_at": "2024-02-25T08:14:44.264843Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.266670Z", "completed_at": "2024-02-25T08:14:44.266673Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016618013381958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_location_sales_houses", "compiled": true, "compiled_code": "\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%' or location2 like 'Zagreba\u010dka,%'\n),\nnew_ads as (\n    select quarter,\n           s.location,\n           count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n           round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n           round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n           round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n           round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d on first_seen = date_\n    where location in (select location from zg_loc)\n    group by d.quarter, s.location\n), sold_ads as (\n    select\n        quarter,\n        s.location,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\" s\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on s.first_seen = d.date_\n    where status = 'inactive'\n        and location in (select location from zg_loc)\n    group by d.quarter, s.location\n), actives as (\n    select\n        d.quarter,\n        s.location,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"sales_houses\" s\n    join \"property_cro\".\"analytics_sales_houses\".\"mv_price_history\" as hist2\n        on s.ad_id = hist2.ad_id\n    join \"property_cro\".\"analytics_common\".\"mv_date_to_quarter_mapping\" d\n        on seen_date = date_\n    where s.location in (select location from zg_loc)\n    group by quarter, s.location\n)\nselect\n    a.quarter as year_month,\n    a.location,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\njoin sold_ads r on n.quarter = r.quarter and n.location = r.location\njoin actives a on n.quarter = a.quarter and n.location = a.location\norder by n.quarter desc\n", "relation_name": "\"property_cro\".\"analytics_sales_houses_analysis\".\"mv_inventory_location_sales_houses\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.268644Z", "completed_at": "2024-02-25T08:14:44.272468Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.278249Z", "completed_at": "2024-02-25T08:14:44.278255Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01253199577331543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.mv_inventory_sales_houses", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith zg_loc as (\n    select distinct location from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\"\n    where location2 like 'Grad Zagreb,%'\n),\nnew_ads as (\n    select\n        cast(to_char(first_seen,'YYYYmm') as integer) as year_month,\n        count(distinct ad_id) filter (where price_m2 < 10000) as new_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as new_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as new_ads_avg_size\n    from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\"\n    where location in (select location from zg_loc)\n    group by cast(to_char(first_seen, 'YYYYmm') as integer)\n), sold_ads as (\n    select\n        cast(to_char(last_seen,'YYYYmm') as integer) as year_month,\n        count(distinct ad_id) filter (where price_m2 < 10000) as sold_ads_qty,\n        round((avg(days_on_the_market) filter (where price_m2 < 10000))::numeric,1) as sold_ads_dom,\n        round((avg(price_m2) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px_m2,\n        round((avg(price) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_px,\n        round((avg(size) filter (where price_m2 < 10000))::numeric,1) as sold_ads_avg_size\n    from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\"\n    where status = 'inactive'\n      and location in (select location from zg_loc)\n    group by cast(to_char(last_seen,'YYYYmm') as integer)\n), actives as (\n    select\n        cast(to_char(seen_date,'YYYYmm') as integer) as year_month,\n        count(distinct s.ad_id) filter (where s.price < 10000000) as active_ads_qty,\n        round((avg(days_on_the_market) filter (where s.price < 10000000))::numeric,1) as active_ads_dom,\n        round((avg(s.price/s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px_m2,\n        round((avg(s.price) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_px,\n        round((avg(s.size) filter (where s.price < 10000000))::numeric,1) as active_ads_avg_size\n    from \"property_cro\".\"staging\".\"sales_houses\" s\n    join \"property_cro\".\"analytics_sales_houses\".\"mv_price_history\" as hist2\n    on s.ad_id = hist2.ad_id\n    where s.location in (select location from zg_loc)\n    group by cast(to_char(seen_date, 'YYYYmm') as integer)\n)\nselect\n    TO_DATE(concat(n.year_month,'01'), 'YYYYMMDD') as year_month,\n    new_ads_qty,\n    new_ads_dom,\n    new_ads_avg_px_m2,\n    new_ads_avg_px,\n    new_ads_avg_size,\n    sold_ads_qty,\n    sold_ads_dom,\n    sold_ads_avg_px_m2,\n    sold_ads_avg_px,\n    sold_ads_avg_size,\n    active_ads_qty,\n    active_ads_dom,\n    active_ads_avg_px_m2,\n    active_ads_avg_px,\n    active_ads_avg_size\nfrom new_ads n\n         join sold_ads r on n.year_month = r.year_month\n         join actives a on n.year_month = a.year_month\norder by n.year_month desc\n\n", "relation_name": "\"property_cro\".\"analytics_sales_houses_analysis\".\"mv_inventory_sales_houses\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.275173Z", "completed_at": "2024-02-25T08:14:44.279480Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.281227Z", "completed_at": "2024-02-25T08:14:44.281231Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013065099716186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.vw_new_ads_alert_sales_houses", "compiled": true, "compiled_code": "\n\nselect\n       m1.location,\n       m1.title,\n       m1.link,\n       m1.flat_type,\n       m1.floor,\n       m1.size,\n       m1.price,\n       m1.first_price,\n       m1.current_price,\n       m1.num_seen,\n       m1.price_m2,\n       m1.area_price_m2,\n       m1.area_discount,\n       m1.area_sized_price_m2,\n       m1.area_sized_discount,\n       m1.area_aged_sized_price_m2,\n       m1.area_aged_sized_discount,\n       m1.price_drop_pecentage,\n       m1.first_seen,\n       m1.last_seen,\n       m1.ad_id,\n       m1.latest_seen_date,\n       m1.status,\n       m1.days_on_the_market,\n       m1.price_7,\n       m1.price_15,\n       m1.price_30,\n       m1.price_45,\n       m1.price_60,\n       m1.url,\n       m1.location2,\n       m1.street,\n       m1.num_views,\n       m1.building_type,\n       m1.house_type,\n       m1.number_of_floors,\n       m1.year_built,\n       m1.year_last_renovated,\n       m1.total_liveable_area,\n       m1.net_area,\n       m1.number_of_rooms,\n       m1.number_of_parking_spots,\n       m1.balcony_terrace,\n       m1.total_number_of_floors_in_building,\n       m1.furbishment_state,\n       m1.epc_rating,\n       m1.table_data,\n       m1.description,\n       m1.extra_description,\n       m1.seen_time,\n       m1.advertiser\nfrom \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\" as m1\nwhere price <= 200000\n    and price_m2 <= 1750\n    and price_m2 > 300\n    and size < 200\n    and (year_built is null or year_built >= 2003)\n    and (year_last_renovated is null or year_last_renovated > 2000)\n--     and number_of_floors not in ('Prizemnica','Visoka prizemnica')\n--     and total_number_of_floors_in_building not in ('Prizemnica','Visoka prizemnica')\n    and coalesce(furbishment_state,'') not in ('Za renoviranje','Roh-bau')\n    and lower(description) not like '%roh bau%'\n    and lower(description) not like '%roh-bau%'\n    and location2 not in ('Grad Zagreb, Pe\u0161\u010denica - \u017ditnjak, Kozari put')\n    and m1.price > 1000\n    \n    and m1.first_seen between now()::date - INTERVAL '120 DAY' and now()::date\n--     and (\n--         (lower(advertiser) not like '%nekretnin%' and lower(advertiser) not like '%agencij%'\n--              and lower(advertiser) not like '%real estate%' and lower(advertiser) not like '%d.o.o.%'\n--              and lower(advertiser) not like '%d.d.%'\n--           and lower(advertiser) not in ('opereta', 'eurovilla d.o.o.', 'aps', 'b2 kapital d.o.o.', 'stan grad immobilien'))\n--         or lower(title) like '%bez provizije%'\n--         or lower(description) like '%bez provizije%'\n--     )\norder by m1.first_seen desc", "relation_name": "\"property_cro\".\"analytics_sales_houses_alerts\".\"vw_new_ads\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.272741Z", "completed_at": "2024-02-25T08:14:44.279778Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.281513Z", "completed_at": "2024-02-25T08:14:44.281516Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01403188705444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.price_changes_per_week", "compiled": true, "compiled_code": "\n\nwith t1 as (\n    select\n        apha.*,\n        case\n            when price_old > price_new then 'price_drop'\n            when price_old < price_new then 'price_rise'\n            else 'same_price'\n            end as price_change_type,\n            (price_new/dets.size - price_old/dets.size) / (price_old/dets.size) as price_change\n    from (\n        select\n            ltrim(price_new,'\u20ac')::int as price_new,\n            ltrim(price_old,'\u20ac')::int as price_old,\n            type,\n            change_date,\n            ad_id,\n            price_change_reason\n        from \"property_cro\".\"analytics_common\".\"ad_price_history\"\n    ) apha\n    left join (\n        select ad_id, size from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\" union all\n        select ad_id, size from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\" union all\n        select ad_id, size from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\"\n    ) dets on apha.ad_id = dets.ad_id\n    where price_old > 100 and price_new > 100 and price_change_reason = 'px_chg'\n)\nselect\n    count(distinct ad_id),\n    round(avg(price_change)::numeric,2) as avg_price_change,\n    type,\n    price_change_type,\n    date_trunc('week', change_date::date)::date as change_week\nfrom t1\nwhere price_change < 1\ngroup by\n    type,\n    price_change_type,\n    date_trunc('week', change_date::date)\norder by change_week desc", "relation_name": "\"property_cro\".\"analytics_common\".\"ad_price_changes_per_week\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.281795Z", "completed_at": "2024-02-25T08:14:44.285741Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:44.286298Z", "completed_at": "2024-02-25T08:14:44.286302Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006679058074951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.vw_price_drops_alert_sales_houses", "compiled": true, "compiled_code": "\n\nselect\n    m1.location,\n    m1.title,\n    m1.link,\n    m1.flat_type,\n    m1.floor,\n    m1.size,\n    m1.price,\n    m1.first_price,\n    m1.current_price,\n    m1.num_seen,\n    m1.price_m2,\n    m1.area_price_m2,\n    m1.area_discount,\n    m1.area_sized_price_m2,\n    m1.area_sized_discount,\n    m1.area_aged_sized_price_m2,\n    m1.area_aged_sized_discount,\n    m1.price_drop_pecentage,\n    m1.first_seen,\n    m1.last_seen,\n    m1.ad_id,\n    m1.latest_seen_date,\n    m1.status,\n    m1.days_on_the_market,\n    m1.price_7,\n    m1.price_15,\n    m1.price_30,\n    m1.price_45,\n    m1.price_60,\n    m1.url,\n    m1.location2,\n    m1.street,\n    m1.num_views,\n    m1.building_type,\n    m1.house_type,\n    m1.number_of_floors,\n    m1.year_built,\n    m1.year_last_renovated,\n    m1.total_liveable_area,\n    m1.net_area,\n    m1.number_of_rooms,\n    m1.number_of_parking_spots,\n    m1.balcony_terrace,\n    m1.total_number_of_floors_in_building,\n    m1.furbishment_state,\n    m1.epc_rating,\n    m1.table_data,\n    m1.description,\n    m1.extra_description,\n    m1.seen_time,\n    m1.advertiser\nfrom \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\" as m1\nwhere price <= 200000\n  and price_m2 <= 1750\n  and price_m2 > 300\n  and size < 200\n  and current_price between 0.4 * first_price and 0.99 * first_price\n  and (year_built is null or year_built > 2003)\n  and (year_last_renovated is null or year_last_renovated > 2000)\n--     and number_of_floors not in ('Prizemnica','Visoka prizemnica')\n--     and total_number_of_floors_in_building not in ('Prizemnica','Visoka prizemnica')\n  and coalesce(furbishment_state,'') not in ('Za renoviranje','Roh-bau')\n  and lower(description) not like '%roh bau%'\n  and lower(description) not like '%roh-bau%'\n  and location2 not in ('Grad Zagreb, Pe\u0161\u010denica - \u017ditnjak, Kozari put')\n  and m1.price > 1000\n  and m1.first_seen between now()::date - INTERVAL '120 DAY' and now()::date\n  and m1.status = 'active'\n--     and (\n--         (lower(advertiser) not like '%nekretnin%' and lower(advertiser) not like '%agencij%'\n--              and lower(advertiser) not like '%real estate%' and lower(advertiser) not like '%d.o.o.%'\n--              and lower(advertiser) not like '%d.d.%'\n--           and lower(advertiser) not in ('opereta', 'eurovilla d.o.o.', 'aps', 'b2 kapital d.o.o.', 'stan grad immobilien'))\n--         or lower(title) like '%bez provizije%'\n--         or lower(description) like '%bez provizije%'\n--     )\norder by m1.first_seen desc", "relation_name": "\"property_cro\".\"analytics_sales_houses_alerts\".\"vw_price_drops\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-25T08:14:44.252664Z", "completed_at": "2024-02-25T08:14:45.869876Z"}, {"name": "execute", "started_at": "2024-02-25T08:14:45.870541Z", "completed_at": "2024-02-25T08:14:45.870552Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.620980978012085, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.property_cro.ad_price_history_agg", "compiled": true, "compiled_code": "\n\n\n\nselect\n    apha.ad_id,\n    apha.price_change_history,\n    apha.created_at,\n    apha.version,\n    dets.price_m2 as price_sqm,\n    dets.area_sized_price_m2 as area_sized_price_sqm,\n    dets.year_built,\n    case\n        when (floor_desc is null or floor_desc like '') and (total_number_of_floors_in_building is null or total_number_of_floors_in_building like '')\n            then ''\n        when (floor_desc is not null and floor_desc <> '') and (total_number_of_floors_in_building is null or total_number_of_floors_in_building like '')\n            then floor_desc\n        when (floor_desc is null or floor_desc like '') and (total_number_of_floors_in_building is not null and total_number_of_floors_in_building <> '')\n            then total_number_of_floors_in_building || ' katova'\n        when (floor_desc is not null and floor_desc <> '') and (total_number_of_floors_in_building is not null and total_number_of_floors_in_building <> '')\n            then floor_desc || ' / ' || total_number_of_floors_in_building\n        end as floor,\n    dets.advertiser,\n    dets.days_on_the_market\nfrom (\n         select\n             aph.ad_id,\n             json_agg(change_date || '|' || price_old || '|' || price_new order by change_date) as price_change_history,\n             current_timestamp(0) as created_at,\n             1 as version\n         from \"property_cro\".\"analytics_common\".\"ad_price_history\" aph\n         where aph.price_new like '%\u20ac%'\n         group by aph.ad_id\n     ) apha\n         left join (\n    select ad_id, price_m2, area_sized_price_m2, year_built, total_number_of_floors_in_building::varchar, advertiser, coalesce(floor_desc, replace(floor, 'kat',''))::varchar as floor_desc, days_on_the_market  from \"property_cro\".\"analytics_sales_flats\".\"mv_enriched_ad\"\n    union all\n    select ad_id, price_m2, area_sized_price_m2, year_built, total_number_of_floors_in_building::varchar, advertiser, coalesce(floor_desc, replace(floor, 'kat',''))::varchar as floor_desc, days_on_the_market from \"property_cro\".\"analytics_rentals_flats\".\"mv_enriched_ad\"\n    union all\n    select ad_id, price_m2, area_sized_price_m2, year_built, total_number_of_floors_in_building::varchar, advertiser, coalesce(floor_desc, replace(floor, 'kat',''))::varchar as floor_desc, days_on_the_market from \"property_cro\".\"analytics_sales_houses\".\"mv_enriched_ad\"\n) dets on apha.ad_id = dets.ad_id", "relation_name": "\"property_cro\".\"analytics_common\".\"ad_price_history_agg\""}], "elapsed_time": 2.054202079772949, "args": {"indirect_selection": "eager", "quiet": false, "compile": true, "invocation_command": "dbt docs generate --profiles-dir property_cro --project-dir property_cro --profile property_cro_postgres", "partial_parse": true, "favor_state": false, "vars": {}, "log_format_file": "debug", "select": [], "static": false, "empty_catalog": false, "defer": false, "populate_cache": true, "send_anonymous_usage_stats": false, "printer_width": 80, "version_check": true, "partial_parse_file_diff": true, "write_json": true, "profiles_dir": "property_cro", "profile": "property_cro_postgres", "warn_error_options": {"include": [], "exclude": []}, "introspect": true, "log_file_max_bytes": 10485760, "static_parser": true, "log_format": "default", "exclude": [], "log_path": "property_cro/logs", "macro_debugging": false, "strict_mode": false, "use_colors_file": true, "project_dir": "property_cro", "cache_selected_only": false, "log_level": "info", "print": true, "show_resource_report": false, "use_colors": true, "log_level_file": "debug", "which": "generate", "enable_legacy_logger": false}}